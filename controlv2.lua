local Players = game:GetService("Players") local ReplicatedStorage = game:GetService("ReplicatedStorage") local RunService = game:GetService("RunService") local LocalPlayer = Players.LocalPlayer if G_LowGFX then for _, v in pairs(workspace:GetDescendants()) do if v:IsA("Part") or v:IsA("MeshPart") then v.Material = Enum.Material.Plastic v.TextureID = "" end end end RunService.RenderStepped:Connect(function() if G_FPS and G_FPS > 0 then task.wait(1 / G_FPS) end end) local function SendWebhook(message) local HttpService = game:GetService("HttpService") local data = { ["content"] = message, ["username"] = "Alt Logger" } request({ Url = G_Webhook, Method = "POST", Headers = { ["Content-Type"] = "application/json" }, Body = HttpService:JSONEncode(data) }) end Players.PlayerChatted:Connect(function(chatType, player, message) if player.UserId ~= G_Owner then return end local args = string.split(message, " ") local command = args[1]:lower() if command == ".bringalts" then if table.find(G_Alts, LocalPlayer.UserId) then local ownerPlayer = Players:GetPlayerByUserId(G_Owner) if ownerPlayer and LocalPlayer.Character and ownerPlayer.Character then LocalPlayer.Character:MoveTo(ownerPlayer.Character.HumanoidRootPart.Position) end end elseif command == ".setbounty" and args[2] then local amount = args[2] if #G_Alts < 2 then return end if LocalPlayer.UserId == G_Alts[1] then local targetUserId = G_Alts[2] local targetPlayer = Players:GetPlayerByUserId(targetUserId) if targetPlayer then ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("SetBounty"):InvokeServer(targetPlayer.Name, amount) end end elseif command == ".test" then SendWebhook("Test from alt: " .. LocalPlayer.Name) end end)
